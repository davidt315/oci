name: ci

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  # Job to run change detection
  changes:
    runs-on: ubuntu-latest
    outputs:
      # Expose matched filters as job 'images' output variable
      images: ${{ steps.filter.outputs.changes }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          # Use context to get the branch where commits were pushed.
          # If there is only one long-lived branch (e.g. master),
          # you can specify it directly.
          # If it's not configured, the repository default branch is used.
          base: ${{ github.ref }}
          filters: |
            acme/certbot: 'acme/certbot/**'
            acme/certbot-dns-cloudflare: 'acme/certbot-dns-cloudflare/**'
            acme/lego: 'acme/lego/**'
            aws-cli: 'aws-cli/**'
            black: 'black/**'
            buildpack-deps/ubuntu/focal/curl: 'buildpack-deps/ubuntu/focal/curl/**'
            buildpack-deps/ubuntu/focal/scm: 'buildpack-deps/ubuntu/focal/scm/**'
            buildpack-deps/ubuntu/focal: 'buildpack-deps/ubuntu/focal/*'
            buildpack-deps/ubuntu/jammy/curl: 'buildpack-deps/ubuntu/jammy/curl/**'
            buildpack-deps/ubuntu/jammy/scm: 'buildpack-deps/ubuntu/jammy/scm/**'
            buildpack-deps/ubuntu/jammy: 'buildpack-deps/ubuntu/jammy/**'
            cinc/cinc-workstation: 'cinc/cinc-workstation/**'
            python/3.8/focal: 'python/3.8/focal/**'
            python/3.8/slim-focal: 'python/3.8/slim-focal/**'
            python/3.8/jammy: 'python/3.8/jammy/**'
            python/3.8/slim-jammy: 'python/3.8/slim-jammy/**'
            python/3.9/focal: 'python/3.9/focal/**'
            python/3.9/slim-focal: 'python/3.9/slim-focal/**'
            python/3.9/jammy: 'python/3.9/jammy/**'
            python/3.9/slim-jammy: 'python/3.9/slim-jammy/**'

  # Job to build and test each of the modified images
  build:
    needs: changes
    strategy:
      matrix:
        # Parse JSON array containing names of all filters matching any of changed files
        # e.g. ['image1', 'image2'] if both image folders contains changes
        image: ${{ fromJSON(needs.changes.outputs.images) }}
    if: ${{ needs.changes.outputs.images != '[]' && needs.changes.outputs.images != '' }}
    runs-on: ubuntu-latest
    steps:
      - uses: polymathrobotics/container-build-publish-action@main
        with:
          workdir: ${{ matrix.image }}
          dockerhub-username: ${{ secrets.CONTAINER_REGISTRY_USERNAME }}
          dockerhub-password: ${{ secrets.CONTAINER_DESCRIPTION_PASSWORD }}
