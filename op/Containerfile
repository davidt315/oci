# syntax=docker/dockerfile:1
ARG BASE_IMAGE=docker.io/ubuntu:jammy-20240808
FROM $BASE_IMAGE AS base

FROM base AS download

ARG OP_CLI_URL_AMD64
ARG OP_CLI_URL_ARM64

RUN <<EOF
  apt-get update
  DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
    ca-certificates \
    curl \
    gnupg \
    unzip
  gpg --keyserver hkps://keyserver.ubuntu.com --receive-keys 3FEF9748469ADBE15DA7CA80AC2D62742012EA22
  mkdir -p /tmp/build
  dpkgArch="$(dpkg --print-architecture)"
  case "${dpkgArch##*-}" in \
    amd64) \
      OP_CLI_URL="${OP_CLI_URL_AMD64}"
      ;; \
    arm64) \
      OP_CLI_URL="${OP_CLI_URL_ARM64}"
      ;; \
    *) echo "unsupported architecture"; exit 1 ;; \
  esac
  curl -fsSL -o /tmp/op_linux.zip ${OP_CLI_URL}
  unzip -d /tmp/build /tmp/op_linux.zip
  cp /tmp/build/op /usr/local/bin/op
  gpg --verify /tmp/build/op.sig /usr/local/bin/op
  # tiny smoke test to ensure the binary we downloaded runs
  op --version
EOF

FROM base

RUN <<EOF
  groupadd -g 999 opuser
  useradd -r -u 999 -g opuser opuser
  mkdir -p /home/opuser
  chown -R opuser /home/opuser
  apt-get update
  apt-get install -y --no-install-recommends \
    ca-certificates \
    curl \
    parallel \
    jq
  rm -rf /var/lib/apt/lists/*
EOF

COPY --from=download /usr/local/bin/op /usr/local/bin/op

USER opuser
WORKDIR /home/opuser

ENTRYPOINT ["/usr/local/bin/op"]
